---

- block:
  - set_fact:
      registry_domain: "{{ lookup('env', 'REGISTRY_DOMAIN') }}"
    when: registry_domain is not defined or registry_domain|length==0

  - set_fact:
      registry_login_username: "{{ lookup('env', 'REGISTRY_LOGIN_USERNAME') }}"
    when: registry_login_username is not defined or registry_login_username|length==0

  - set_fact:
      registry_login_token: "{{ lookup('env', 'REGISTRY_LOGIN_TOKEN') }}"
    when: registry_login_token is not defined or registry_login_token|length==0

  - fail:
      msg: "one or more required variables ('registry_domain', 'registry_login_username', 'registry_login_token') are not set"
    when:
      - registry_domain is not defined or registry_domain|length==0 or
        registry_login_username is not defined or registry_login_username|length==0 or
        registry_login_token is not defined or registry_login_token|length==0

  when: publish_images is defined and publish_images|bool

- name: "ensure teampass_release_version var is defined"
  fail:
    msg: "teampass release version variable is not set"
  when: teampass_release_version is not defined or teampass_release_version|length==0

- name: ensure build directory is created
  ansible.builtin.tempfile:
    state: directory
    suffix: build
  register: build_dir_obj

- name: "ensure the '{{ application_dir }}' dir exists in '{{ build_dir_obj.path }}'"
  file:
    path: "{{ build_dir_obj.path }}/{{ application_dir }}"
    state: directory
    mode: 0755

- name: "download and extract release artifact"
  unarchive:
    src: "{{ github_release_download_url }}"
    dest: "{{ build_dir_obj.path }}/{{ application_dir }}"
    remote_src: true
    extra_opts: [--strip-components=1]

- name: copy build assets
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/../../assets/{{ item }}"
    dest: "{{ build_dir_obj.path }}/{{ item }}"
    mode: '0644'
  with_items:
    - Dockerfile.php
    - Dockerfile.web
    - nginx-site.conf
    - startup.sh
    - Settings.yaml

- name: "build image 'ghcr.io/teampass/teampass-web' with tag '{{ teampass_release_version }}'"
  community.docker.docker_image:
    build:
      dockerfile: Dockerfile.web
      path: "{{ build_dir_obj.path }}"
    name: ghcr.io/teampass/teampass-web
    force_tag: yes
    tag: "{{ teampass_release_version }}"
    source: build

- name: "Add tag latest to image 'ghcr.io/teampass/teampass-web' and tag '{{ teampass_release_version }}'"
  community.general.docker_image:
    name: "ghcr.io/teampass/teampass-web:{{ teampass_release_version }}"
    repository: "ghcr.io/teampass/teampass-web:latest"
    force_tag: yes
    source: local

- name: "build image 'ghcr.io/teampass/teampass-php' with tag '{{ teampass_release_version }}'"
  community.docker.docker_image:
    build:
      dockerfile: Dockerfile.php
      path: "{{ build_dir_obj.path }}"
    name: ghcr.io/teampass/teampass-php
    force_tag: yes
    tag: "{{ teampass_release_version }}"
    source: build

- name: "Add tag latest to image 'ghcr.io/teampass/teampass-php' and tag '{{ teampass_release_version }}'"
  community.general.docker_image:
    name: "ghcr.io/teampass/teampass-php:{{ teampass_release_version }}"
    repository: "ghcr.io/teampass/teampass-php:latest"
    force_tag: yes
    source: local

- name: ensure build directory is deleted
  ansible.builtin.file:
    path: "{{ build_dir_obj.path }}"
    state: absent

- block:
  - set_fact:
      registry_domain: "{{ lookup('env', 'REGISTRY_DOMAIN') }}"
    when: registry_domain is not defined or registry_domain|length==0

  - set_fact:
      registry_login_username: "{{ lookup('env', 'REGISTRY_LOGIN_USERNAME') }}"
    when: registry_login_username is not defined or registry_login_username|length==0

  - set_fact:
      registry_login_token: "{{ lookup('env', 'REGISTRY_LOGIN_TOKEN') }}"
    when: registry_login_token is not defined or registry_login_token|length==0

  - fail:
      msg: "one or more required variables ('registry_domain', 'registry_login_username', 'registry_login_token') are not set"
    when:
      - registry_domain is not defined or registry_domain|length==0 or
        registry_login_username is not defined or registry_login_username|length==0 or
        registry_login_token is not defined or registry_login_token|length==0

  - name: login into container registry
    community.general.docker_login:
      registry_url: "{{ registry_domain }}"
      username: "{{ registry_login_username }}"
      password: "{{ registry_login_token }}"
      reauthorize: yes

  - name: "push image 'teampass-php:{{ teampass_release_version }}' to registry"
    community.general.docker_image:
      name: "ghcr.io/teampass/teampass-php:{{ teampass_release_version }}"
      repository: "ghcr.io/teampass/teampass-php:{{ teampass_release_version }}"
      push: yes
      source: local

  - name: "push image 'teampass-php:{{ teampass_release_version }}' as 'teampass/teampass-php:latest' to registry"
    community.general.docker_image:
      name: "ghcr.io/teampass/teampass-php:{{ teampass_release_version }}"
      repository: "ghcr.io/teampass/teampass-php:latest"
      force_tag: yes
      push: yes
      source: local

  - name: "push image 'teampass-web:{{ teampass_release_version }}' to registry"
    community.general.docker_image:
      name: "ghcr.io/teampass/teampass-web:{{ teampass_release_version }}"
      repository: "ghcr.io/teampass/teampass-web:{{ teampass_release_version }}"
      push: yes
      source: local

  - name: "push image 'teampass-web:{{ teampass_release_version }}' as 'teampass/teampass-web:latest' to registry"
    community.general.docker_image:
      name: "ghcr.io/teampass/teampass-web:{{ teampass_release_version }}"
      repository: "ghcr.io/teampass/teampass-web:latest"
      force_tag: yes
      push: yes
      source: local

  - name: log out of registry
    community.general.docker_login:
      state: absent

  when: publish_images is defined and publish_images|bool